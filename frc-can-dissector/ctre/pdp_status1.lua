-- CTRE PDP STATUS1
local M = {}

M.chan1_h8_field = ProtoField.uint8("can.frc.ctre.pdp.chan1_h8", "PDP Chan1_h8", base.DEC, nil, 0xff)
M.chan2_h6_field = ProtoField.uint8("can.frc.ctre.pdp.chan2_h6", "PDP Chan2_h6", base.DEC, nil, 0xfc)
M.chan1_l2_field = ProtoField.uint8("can.frc.ctre.pdp.chan1_l2", "PDP Chan1_l2", base.DEC, nil, 0x03)
M.chan3_h4_field = ProtoField.uint8("can.frc.ctre.pdp.chan3_h4", "PDP Chan3_h4", base.DEC, nil, 0xf0)
M.chan2_l4_field = ProtoField.uint8("can.frc.ctre.pdp.chan2_l4", "PDP Chan2_l4", base.DEC, nil, 0x0f)
M.chan4_h2_field = ProtoField.uint8("can.frc.ctre.pdp.chan4_h2", "PDP Chan4_h2", base.DEC, nil, 0xc0)
M.chan3_l6_field = ProtoField.uint8("can.frc.ctre.pdp.chan3_l6", "PDP Chan3_l6", base.DEC, nil, 0x3f)
M.chan4_l8_field = ProtoField.uint8("can.frc.ctre.pdp.chan4_l8", "PDP Chan4_l8", base.DEC, nil, 0xff)
M.chan5_h8_field = ProtoField.uint8("can.frc.ctre.pdp.chan5_h8", "PDP Chan5_h8", base.DEC, nil, 0xff)
M.chan6_h6_field = ProtoField.uint8("can.frc.ctre.pdp.chan6_h6", "PDP Chan6_h6", base.DEC, nil, 0xfc)
M.chan5_l2_field = ProtoField.uint8("can.frc.ctre.pdp.chan5_l2", "PDP Chan5_l2", base.DEC, nil, 0x03)
M.chan6_l4_field = ProtoField.uint8("can.frc.ctre.pdp.chan6_l4", "PDP Chan6_l4", base.DEC, nil, 0x0f)

function M.insert(t)
  table.insert(t, M.chan1_h8_field)
  table.insert(t, M.chan2_h6_field)
  table.insert(t, M.chan1_l2_field)
  table.insert(t, M.chan3_h4_field)
  table.insert(t, M.chan2_l4_field)
  table.insert(t, M.chan4_h2_field)
  table.insert(t, M.chan3_l6_field)
  table.insert(t, M.chan4_l8_field)
  table.insert(t, M.chan5_h8_field)
  table.insert(t, M.chan6_h6_field)
  table.insert(t, M.chan5_l2_field)
  table.insert(t, M.chan6_l4_field)

  M.chan1_h8 = Field.new("can.frc.ctre.pdp.chan1_h8")
  M.chan2_h6 = Field.new("can.frc.ctre.pdp.chan2_h6")
  M.chan1_l2 = Field.new("can.frc.ctre.pdp.chan1_l2")
  M.chan3_h4 = Field.new("can.frc.ctre.pdp.chan3_h4")
  M.chan2_l4 = Field.new("can.frc.ctre.pdp.chan2_l4")
  M.chan4_h2 = Field.new("can.frc.ctre.pdp.chan4_h2")
  M.chan3_l6 = Field.new("can.frc.ctre.pdp.chan3_l6")
  M.chan4_l8 = Field.new("can.frc.ctre.pdp.chan4_l8")
  M.chan5_h8 = Field.new("can.frc.ctre.pdp.chan5_h8")
  M.chan6_h6 = Field.new("can.frc.ctre.pdp.chan6_h6")
  M.chan5_l2 = Field.new("can.frc.ctre.pdp.chan5_l2")
  M.chan6_l4 = Field.new("can.frc.ctre.pdp.chan6_l4")
end

function M.dissect(buffer, pinfo, subtree)
  subtree:add(M.chan1_h8_field, buffer:range(8,1))
  subtree:add(M.chan2_h6_field, buffer:range(9,1))
  subtree:add(M.chan1_l2_field, buffer:range(9,1))
  subtree:add(M.chan3_h4_field, buffer:range(10,1))
  subtree:add(M.chan2_l4_field, buffer:range(10,1))
  subtree:add(M.chan4_h2_field, buffer:range(11,1))
  subtree:add(M.chan3_l6_field, buffer:range(11,1))
  subtree:add(M.chan4_l8_field, buffer:range(12,1))
  subtree:add(M.chan5_h8_field, buffer:range(13,1))
  subtree:add(M.chan6_h6_field, buffer:range(14,1))
  subtree:add(M.chan5_l2_field, buffer:range(14,1))
  subtree:add(M.chan6_l4_field, buffer:range(15,1))

  subtree:add("current_channel_1 (A):", currentA(bit.bor(bit.lshift(M.chan1_h8()(), 2), M.chan1_l2()())))
  subtree:add("current_channel_2 (A):", currentA(bit.bor(bit.lshift(M.chan2_h6()(), 4), M.chan2_l4()())))
  subtree:add("current_channel_3 (A):", currentA(bit.bor(bit.lshift(M.chan3_h4()(), 6), M.chan3_l6()())))
  subtree:add("current_channel_4 (A):", currentA(bit.bor(bit.lshift(M.chan4_h2()(), 8), M.chan4_l8()())))
  subtree:add("current_channel_5 (A):", currentA(bit.bor(bit.lshift(M.chan5_h8()(), 2), M.chan5_l2()())))
  subtree:add("current_channel_6 (A):", currentA(bit.bor(bit.lshift(M.chan6_h6()(), 4), M.chan6_l4()())))
end

return M
